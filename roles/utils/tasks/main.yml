---

- name: Configure /etc/apt/preferences
  become: true
  template:
    src: etc/apt/preferences.j2
    dest: /etc/apt/preferences
    mode: 0644
    owner: root
    group: root
  notify:
    - apt update

- name: Configure /etc/apt/sources.list
  become: true
  template:
    src: etc/apt/sources.list.j2
    dest: /etc/apt/sources.list
    mode: 0644
    owner: root
    group: root
  notify:
    - apt update

- name: Configure nautilus bookmarks (global)
  become: true
  template:
    src: etc/xdg/user-dirs.defaults.j2
    dest: /etc/xdg/user-dirs.defaults
    mode: 0644
    owner: root
    group: root

- name: Configure nautilus bookmarks (user)
  template:
    src: .config/user-dirs.dirs.j2
    dest: ~/.config/user-dirs.dirs
    mode: 0644

- name: Install useful packages
  become: true
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: true
  register: packages_installed
  until: packages_installed is success
  retries: 10
  delay: 2
  when: ansible_hostname != 'travis'

- name: Install useful binaries
  become: true
  get_url:
    url: "{{ item.value }}"
    dest: "/usr/local/bin/{{ item.key }}"
    mode: 0755
    owner: root
    group: root
  with_dict: "{{ binaries }}"

- name: Install useful gems
  gem:
    name: "{{ item.key }}"
    version: "{{ item.value }}"
    state: present
  with_dict: "{{ gems }}"

- name: Create ~/.bashrc.d directory
  file:
    path: ~/.bashrc.d
    state: directory

- name: Source all files in ~/.bashrc.d directory
  blockinfile:
    path: ~/.bashrc
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
    insertafter: EOF
    block: |
      for file in ~/.bashrc.d/*; do
        if [ -r $file ]; then
          . $file
        fi
      done

- name: Clone bash-git-prompt repository
  git:
    repo: "https://github.com/magicmonty/bash-git-prompt.git"
    dest: "~/.bash-git-prompt"
    update: true
    force: true
    depth: 1
  tags:
    - skip_ansible_lint

- name: Add bash-git-prompt configuration file
  template:
    src: bash-git-prompt.j2
    dest: ~/.bashrc.d/bash-git-prompt
    mode: 0755

- name: Add terminator configuration file for title bar
  template:
    src: terminator.j2
    dest: ~/.bashrc.d/terminator
    mode: 0755

- name: Add better history configuration
  template:
    src: history.j2
    dest: ~/.bashrc.d/history
    mode: 0755

- name: Add golang configuration
  template:
    src: golang.j2
    dest: ~/.bashrc.d/golang
    mode: 0755

- name: Create golang directory
  file:
    path: "~/go"
    state: directory
    mode: 0755

- name: Add gcloud sdk apt-key
  become: true
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present
  register: gcloud_key_installed
  until: gcloud_key_installed is success
  retries: 10
  delay: 2

- name: Add gcloud sdk repository
  become: true
  apt_repository:
    repo: "deb http://packages.cloud.google.com/apt cloud-sdk-{{ ansible_lsb.codename }} main"
    state: present
    filename: google-cloud-sdk
    update_cache: true
  notify:
    - apt update

- name: Install gcloud sdk
  become: true
  apt:
    name: google-cloud-sdk={{ google_cloud_sdk_version }}
    state: present
    update_cache: true
  register: gcloud_installed
  until: gcloud_installed is success
  retries: 10
  delay: 2

- name: Install kubectl
  become: true
  apt:
    name: kubectl={{ kubectl_version }}
    state: present
    update_cache: true
  register: packages_installed
  until: packages_installed is success
  retries: 10
  delay: 2

- name: Install evil chrome
  become: true
  apt:
    deb: https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
  register: chrome_installed
  until: chrome_installed is success
  retries: 10
  delay: 2

- name: Add spotify apt-key
  become: true
  apt_key:
    keyserver: keyserver.ubuntu.com
    id: 931FF8E79F0876134EDDBDCCA87FF9DF48BF1C90
    state: present
  register: spotify_key_installed
  until: spotify_key_installed is success
  retries: 10
  delay: 2

- name: Add spotify repository
  become: true
  apt_repository:
    repo: "deb http://repository.spotify.com stable non-free"
    state: present
    filename: spotify
    update_cache: true
  notify:
    - apt update

- name: Install spotify
  become: true
  apt:
    name: spotify-client
    state: present
    update_cache: true
  register: spotify_installed
  until: spotify_installed is success
  retries: 10
  delay: 2

- name: Add nextcloud apt key
  become: true
  apt_key:
    keyserver: keyserver.ubuntu.com
    id: 1FCD77DD0DBEF5699AD2610160EE47FBAD3DD469
    state: present
  register: nextcloud_key_installed
  until: nextcloud_key_installed is success
  retries: 10
  delay: 2

- name: Add nextcloud repo
  become: true
  apt_repository:
    repo: "deb http://ppa.launchpad.net/nextcloud-devs/client/ubuntu {{ nextcloud_release }} main"
    filename: nextcloud-client
    state: present
  notify:
    - apt update

- name: Install nextcloud packages
  become: true
  apt:
    name: "{{ nextcloud_packages }}"
    state: present
    update_cache: true
    default_release: cosmic
  register: nextcloud_packages_installed
  until: nextcloud_packages_installed is success
  retries: 10
  delay: 2
  when: ansible_hostname != 'travis'

- name: Add docker apt-key
  become: true
  apt_key:
    url: https://download.docker.com/linux/debian/gpg
    state: present
  register: docker_key_installed
  until: docker_key_installed is success
  retries: 10
  delay: 2

- name: Add docker repository
  become: true
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/debian {{ ansible_lsb.codename }} stable"
    state: present
    filename: docker
    update_cache: true
  notify:
    - apt update
  when: ansible_hostname != 'travis'

- name: Install docker
  become: true
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    state: present
    update_cache: true
  register: docker_installed
  until: docker_installed is success
  retries: 10
  delay: 2
  when: ansible_hostname != 'travis'

- name: Add {{ lookup('env','USER') }} to group docker
  become: true
  user:
    name: "{{ lookup('env','USER') }}"
    groups: docker
    append: true

- name: Configure ssh client
  template:
    src: .ssh/config.j2
    dest: ~/.ssh/config
    mode: 0600
