---
- name: Configure /etc/apt/preferences
  become: true
  ansible.builtin.template:
    src: etc/apt/preferences.j2
    dest: /etc/apt/preferences
    mode: 0644
    owner: root
    group: root
  when: ansible_distribution != "MacOSX"
  notify:
    - update apt cache

- name: Configure /etc/apt/sources.list
  become: true
  ansible.builtin.template:
    src: etc/apt/sources.list.j2
    dest: /etc/apt/sources.list
    mode: 0644
    owner: root
    group: root
  when: ansible_distribution != "MacOSX"
  notify:
    - update apt cache

- name: Remove useless packages
  become: true
  ansible.builtin.apt:
    name: firefox-esr
    state: absent
  when: ansible_distribution != "MacOSX"

- name: Install firefox from unstable repository
  become: true
  ansible.builtin.apt:
    name: firefox
    state: present
    update_cache: true
    default_release: unstable
  when:
    - ansible_distribution != "MacOSX"
    - '"firefox" not in ansible_facts.packages'

- name: Install useful packages
  become: true
  ansible.builtin.apt:
    name: "{{ useful_packages }}"
    state: present
    update_cache: true
  when: ansible_distribution != "MacOSX"

- name: Configure ssh client
  ansible.builtin.template:
    src: .ssh/config.j2
    dest: ~/.ssh/config
    mode: 0600

- name: Setup splash screen
  become: true
  ansible.builtin.lineinfile:
    dest: /etc/default/grub
    regexp: "^GRUB_CMDLINE_LINUX_DEFAULT=.*"
    line: 'GRUB_CMDLINE_LINUX_DEFAULT="quiet splash"'
  when: ansible_distribution != "MacOSX"
  notify:
    - update-grub

- name: Let me use Control+Shift+E please !
  ansible.builtin.command: gsettings set org.freedesktop.ibus.panel.emoji hotkey "['<Control><Shift>j']"
  changed_when: false
  when: ansible_distribution != "MacOSX"

- name: Configure nautilus bookmarks (global)
  become: true
  ansible.builtin.template:
    src: etc/xdg/user-dirs.defaults.j2
    dest: /etc/xdg/user-dirs.defaults
    mode: 0644
    owner: root
    group: root
  when: ansible_distribution != "MacOSX"

- name: Configure nautilus bookmarks (user)
  ansible.builtin.template:
    src: .config/user-dirs.dirs.j2
    dest: ~/.config/user-dirs.dirs
    mode: 0644
  when: ansible_distribution != "MacOSX"

- name: Configure NetworkManager to handle ethernet card
  become: true
  ansible.builtin.replace:
    path: /etc/NetworkManager/NetworkManager.conf
    regexp: '^\[ifupdown\]\nmanaged=[a-z]*$'
    replace: '[ifupdown]\nmanaged=true'
  when: ansible_distribution != "MacOSX"
  notify:
    - restart networkmanager

- name: Remove default gnome folders
  ansible.builtin.file:
    path: "~/{{ item }}"
    state: absent
  with_items:
    - Desktop
    - Documents
    - Music
    - Pictures
    - Public
    - Templates
    - Videos
  when: ansible_distribution != "MacOSX"

- name: Configure bind9
  become: true
  ansible.builtin.template:
    src: etc/bind/named.conf.options.j2
    dest: /etc/bind/named.conf.options
    owner: root
    group: bind
    mode: 0644
  notify:
    - restart bind9
  when: ansible_distribution != "MacOSX"

- name: Start bind9 at boot
  become: true
  ansible.builtin.service:
    name: named
    enabled: true
    state: started
  when: ansible_distribution != "MacOSX"

- name: Install Hack fonts
  ansible.builtin.unarchive:
    src: https://github.com/source-foundry/Hack/releases/download/v3.003/Hack-v3.003-ttf.tar.gz
    dest: ~/Library/Fonts/
    remote_src: true
    mode: 0755
    owner: "{{ lookup('ansible.builtin.env', 'USER') }}"
    group: admin
  when: ansible_distribution == "MacOSX"

- name: Check default monospace font
  ansible.builtin.command: gsettings get org.gnome.desktop.interface monospace-font-name
  register: default_monospace_font
  changed_when: false
  when: ansible_distribution != "MacOSX"

- name: Set Hack as default monospace font
  ansible.builtin.command: gsettings set org.gnome.desktop.interface monospace-font-name 'Hack Regular 11'
  changed_when: true
  when:
    - ansible_distribution != "MacOSX"
    - default_monospace_font.stdout != "\'Hack Regular 11\'"

- name: Check gnome recent files
  ansible.builtin.command: gsettings get org.gnome.desktop.privacy remember-recent-files
  register: remember_recent_files
  changed_when: false
  when: ansible_distribution != "MacOSX"

- name: Disable gnome recent files
  ansible.builtin.command: gsettings set org.gnome.desktop.privacy remember-recent-files false
  changed_when: true
  when:
    - ansible_distribution != "MacOSX"
    - remember_recent_files.stdout != 'false'
